#include<stdio.h>
int a[2][1001];
int t[2][1001];
int f[2][1001];
void DPFastestWay(int e[2],int x[2],int n)
{
	int j=1,r;
	f[0][0]=e[0]+a[0][0];
	f[1][0]=e[1]+a[1][0];
	do
	{
		if(f[0][j-1]+a[0][j]<=f[1][j-1]+t[1][j-1]+a[0][j])
			f[0][j]=f[0][j-1]+a[0][j];
		else 
			f[0][j]=f[1][j-1]+t[1][j-1]+a[0][j];
		if(f[1][j-1]+a[1][j]<=f[0][j-1]+t[0][j-1]+a[1][j])
			f[1][j]=f[1][j-1]+a[1][j];
		else
			f[1][j]=f[0][j-1]+t[0][j-1]+a[1][j];
		j++;
	}while(j<n);
	if(f[0][n-1]+x[0]<=f[1][n-1]+x[1])
		r=f[0][n-1]+x[0];
	else r=f[1][n-1]+x[1];
	printf("%d\n",r);
}
int main()
{
	int n,e[2],x[2],i;
	scanf("%d",&n);
	scanf("%d%d%d%d",&e[0],&e[1],&x[0],&x[1]);
	for(i=0;i<n;i++)
		scanf("%d",&a[0][i]);
	for(i=0;i<n;i++)
		scanf("%d",&a[1][i]);
	for(i=0;i<n-1;i++)
		scanf("%d",&t[0][i]);
	for(i=0;i<n-1;i++)
		scanf("%d",&t[1][i]);
	DPFastestWay(e,x,n);
	return 0;
}
